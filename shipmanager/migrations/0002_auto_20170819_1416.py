# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-08-19 06:16
from __future__ import unicode_literals

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        ('shipmanager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalCV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_name', models.CharField(max_length=200, null=True, verbose_name='称呼')),
                ('age', models.CharField(max_length=200, null=True, verbose_name='年龄')),
                ('gender', models.CharField(max_length=200, null=True, verbose_name='性别')),
                ('nation', models.CharField(max_length=200, null=True, verbose_name='民族')),
                ('tall', models.CharField(max_length=200, null=True, verbose_name='身高')),
                ('native', models.CharField(max_length=200, null=True, verbose_name='籍贯')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='现地址')),
                ('graduate', models.CharField(max_length=200, null=True, verbose_name='毕业院校')),
                ('graduate_time', models.CharField(max_length=200, null=True, verbose_name='毕业时间')),
                ('major', models.CharField(max_length=200, null=True, verbose_name='专业')),
                ('certificate_level', models.CharField(max_length=200, null=True, verbose_name='证书等级')),
                ('work_age', models.CharField(max_length=200, null=True, verbose_name='工作时间')),
                ('present_duty', models.CharField(max_length=200, null=True, verbose_name='现职位')),
                ('language', models.CharField(max_length=200, null=True, verbose_name='外语')),
                ('special_skills', models.CharField(max_length=2000, null=True, verbose_name='特殊技能')),
                ('duty', models.CharField(max_length=200, null=True, verbose_name='求职职位')),
                ('salary', models.CharField(max_length=200, null=True, verbose_name='月薪')),
                ('route_area', models.CharField(max_length=200, null=True, verbose_name='航线区域')),
                ('contract', models.CharField(max_length=200, null=True, verbose_name='合同年限')),
                ('recruitment_ship', models.CharField(max_length=200, null=True, verbose_name='招聘船型')),
                ('special_certificate', models.CharField(max_length=200, null=True, verbose_name='特殊证书')),
                ('post_time', models.DateField(auto_now_add=True, max_length=200, null=True, verbose_name='发布时间')),
                ('tel', models.CharField(max_length=200, null=True, verbose_name='电话')),
                ('QQ', models.CharField(max_length=200, null=True, verbose_name='QQ')),
                ('experience', models.TextField(max_length=200, null=True, verbose_name='工作经历')),
                ('introduction', models.TextField(max_length=200, null=True, verbose_name='自我介绍')),
                ('time', models.CharField(max_length=30, null=True, verbose_name='时间范围')),
            ],
            options={
                'ordering': ['-post_time'],
            },
        ),
        migrations.AlterModelOptions(
            name='library',
            options={'ordering': ['-post_time']},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='certificate_level',
        ),
        migrations.RemoveField(
            model_name='user',
            name='company_name',
        ),
        migrations.RemoveField(
            model_name='user',
            name='duty',
        ),
        migrations.RemoveField(
            model_name='user',
            name='duty_id',
        ),
        migrations.RemoveField(
            model_name='user',
            name='recruitment_ship',
        ),
        migrations.RemoveField(
            model_name='user',
            name='route_area',
        ),
        migrations.RemoveField(
            model_name='user',
            name='ship_age',
        ),
        migrations.RemoveField(
            model_name='user',
            name='special_certificate',
        ),
        migrations.RemoveField(
            model_name='user',
            name='time',
        ),
        migrations.RemoveField(
            model_name='user',
            name='tonnage',
        ),
        migrations.AddField(
            model_name='library',
            name='QQ',
            field=models.CharField(max_length=300, null=True, verbose_name='在线QQ'),
        ),
        migrations.AddField(
            model_name='library',
            name='address',
            field=models.CharField(max_length=300, null=True, verbose_name='公司地址'),
        ),
        migrations.AddField(
            model_name='library',
            name='contact',
            field=models.CharField(max_length=300, null=True, verbose_name='联系人'),
        ),
        migrations.AddField(
            model_name='library',
            name='contract',
            field=models.CharField(max_length=300, null=True, verbose_name='合同年限'),
        ),
        migrations.AddField(
            model_name='library',
            name='email',
            field=models.CharField(max_length=300, null=True, verbose_name='电子邮箱'),
        ),
        migrations.AddField(
            model_name='library',
            name='introduction',
            field=models.TextField(max_length=300, null=True, verbose_name='公司介绍'),
        ),
        migrations.AddField(
            model_name='library',
            name='onboard_location',
            field=models.CharField(max_length=300, null=True, verbose_name='上船地点'),
        ),
        migrations.AddField(
            model_name='library',
            name='onboard_time',
            field=models.CharField(max_length=200, null=True, verbose_name='上船时间'),
        ),
        migrations.AddField(
            model_name='library',
            name='post_time',
            field=models.DateField(auto_now=True, max_length=300, null=True, verbose_name='搜索时间'),
        ),
        migrations.AddField(
            model_name='library',
            name='property',
            field=models.CharField(max_length=200, null=True, verbose_name='公司性质'),
        ),
        migrations.AddField(
            model_name='library',
            name='require',
            field=models.TextField(max_length=300, null=True, verbose_name='具体要求'),
        ),
        migrations.AddField(
            model_name='library',
            name='salary',
            field=models.CharField(max_length=300, null=True, verbose_name='提供月薪'),
        ),
        migrations.AddField(
            model_name='library',
            name='tel',
            field=models.CharField(max_length=300, null=True, verbose_name='公司电话'),
        ),
        migrations.AddField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=30, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=30, verbose_name='last name'),
        ),
        migrations.AddField(
            model_name='user',
            name='nickname',
            field=models.CharField(blank=True, max_length=50, verbose_name='昵称'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='article',
            name='created_time',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='article',
            name='last_modified_time',
            field=models.DateTimeField(auto_now_add=True, verbose_name='修改时间'),
        ),
        migrations.AlterField(
            model_name='article',
            name='status',
            field=models.CharField(max_length=1, verbose_name='文章状态'),
        ),
        migrations.AlterField(
            model_name='library',
            name='certificate_level',
            field=models.CharField(max_length=200, null=True, verbose_name='证书等级'),
        ),
        migrations.AlterField(
            model_name='library',
            name='duty',
            field=models.CharField(max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='library',
            name='recruitment_ship',
            field=models.CharField(max_length=300, null=True, verbose_name='招聘船型'),
        ),
        migrations.AlterField(
            model_name='library',
            name='route_area',
            field=models.CharField(max_length=300, null=True, verbose_name='路线区域'),
        ),
        migrations.AlterField(
            model_name='library',
            name='special_certificate',
            field=models.CharField(max_length=300, null=True, verbose_name='特殊证书'),
        ),
        migrations.AlterField(
            model_name='library',
            name='time',
            field=models.CharField(max_length=300, null=True, verbose_name='搜索时间'),
        ),
        migrations.AlterField(
            model_name='library',
            name='tonnage',
            field=models.CharField(max_length=200, null=True, verbose_name='吨位'),
        ),
        migrations.AlterField(
            model_name='user',
            name='password',
            field=models.CharField(max_length=128, verbose_name='password'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username'),
        ),
    ]
